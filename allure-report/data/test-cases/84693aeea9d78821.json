{"uid":"84693aeea9d78821","name":"test_add_admin[lily3-admin123-admin124-Passwords do not match]","fullName":"test_admin#test_add_admin","historyId":"b0b2f878e26580afedc134163273daa0","time":{"start":1748762435078,"stop":1748762456356,"duration":21278},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000102dce924 cxxbridge1$str$ptr + 2825408\n1   chromedriver                        0x0000000102dc6b6c cxxbridge1$str$ptr + 2793224\n2   chromedriver                        0x0000000102905a5c cxxbridge1$string$len + 90124\n3   chromedriver                        0x000000010294cc78 cxxbridge1$string$len + 381480\n4   chromedriver                        0x000000010298dac0 cxxbridge1$string$len + 647280\n5   chromedriver                        0x0000000102940eb4 cxxbridge1$string$len + 332900\n6   chromedriver                        0x0000000102d930f0 cxxbridge1$str$ptr + 2581644\n7   chromedriver                        0x0000000102d963b4 cxxbridge1$str$ptr + 2594640\n8   chromedriver                        0x0000000102d7470c cxxbridge1$str$ptr + 2456232\n9   chromedriver                        0x0000000102d96c2c cxxbridge1$str$ptr + 2596808\n10  chromedriver                        0x0000000102d65f34 cxxbridge1$str$ptr + 2396880\n11  chromedriver                        0x0000000102db66a0 cxxbridge1$str$ptr + 2726460\n12  chromedriver                        0x0000000102db682c cxxbridge1$str$ptr + 2726856\n13  chromedriver                        0x0000000102dc67b8 cxxbridge1$str$ptr + 2792276\n14  libsystem_pthread.dylib             0x0000000187511c0c _pthread_start + 136\n15  libsystem_pthread.dylib             0x000000018750cb80 thread_start + 8","statusTrace":"login_as_admin = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7876584a75c8d2ad2ac86c7bdc9199a1\")>\nusername = 'lily3', password = 'admin123', confirm_password = 'admin124', expected_message = 'Passwords do not match'\n\n    @pytest.mark.parametrize(\"username, password, confirm_password, expected_message\",[\n        #positive test case: valid input\n        (\"lily1\",\"admin123\",\"admin123\",\"\"),\n        #negative test case, password should have at least 7 character\n        (\"lily2\",\"admin\", \"admin\", \"Should have at least 7 characters\"),\n        #username should have 5 character\n        (\"lily\",\"admin123\",\"admin123\",\"Should be at least 5 characters\"),\n        #password do not match\n        (\"lily3\",\"admin123\",\"admin124\",\"Passwords do not match\"),\n        #required\n        (\"\",\"\",\"\",\"Required\"),\n        #\n    ])\n    def test_add_admin(login_as_admin,username,password,confirm_password, expected_message):\n        driver = login_as_admin\n        wait = WebDriverWait(driver,10)\n        admin_tab = wait.until(EC.visibility_of_element_located((By.LINK_TEXT,\"Admin\")))\n        admin_tab.click()\n    \n        add_btn = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[text()=' Add ']\")))\n        add_btn.click()\n    \n        #user role\n        user_role = wait.until(EC.visibility_of_element_located((By.XPATH, \"//label[text()='User Role']/following::div[1]\")))\n        action_role = ActionChains(driver)\n        action_role.move_to_element(user_role).click().send_keys(Keys.ARROW_DOWN).send_keys(Keys.ENTER).perform()\n    \n        #employee name\n        emp_name = wait.until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Type for hints...']\")))\n        emp_name.send_keys(\"a\")\n        time.sleep(5)\n        action_emp = ActionChains(driver)\n        action_emp.move_to_element(emp_name).click().send_keys(Keys.ARROW_DOWN).send_keys(Keys.ARROW_DOWN).send_keys(Keys.ENTER).perform()\n    \n        #status\n        action_status = ActionChains(driver)\n        status = wait.until(\n            EC.visibility_of_element_located((By.XPATH, \"//label[text()='Status']/following::div[1]\")))\n        action_status.move_to_element(status).click().send_keys(Keys.ARROW_DOWN).send_keys(Keys.ENTER).perform()\n    \n        #username\n        user_name = wait.until(EC.visibility_of_element_located((By.XPATH, \"//label[text()='Username']/following::div[1]//input\")))\n        user_name.send_keys(username)\n        #password\n        pass_word = wait.until(EC.visibility_of_element_located((By.XPATH, \"//label[text()='Password']/following::div[1]//input\")))\n        pass_word.send_keys(password)\n    \n        #confirm password\n        con_pas = wait.until(EC.visibility_of_element_located((By.XPATH, \"//label[text()='Confirm Password']/following::div[1]//input\")))\n        con_pas.send_keys(confirm_password)\n    \n        #save button\n        save_btn = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[@type='submit']\")))\n        save_btn.click()\n    \n        #if expected error occur, verify validation message\n        if expected_message:\n            for error in expected_message:\n>               error_msg = wait.until(EC.visibility_of_element_located((By.XPATH,f\"//span[normalize-space()='{error}']\")))\n\ntest_admin.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7876584a75c8d2ad2ac86c7bdc9199a1\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x102954ea0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000102dce924 cxxbridge1$str$ptr + 2825408\nE       1   chromedriver                        0x0000000102dc6b6c cxxbridge1$str$ptr + 2793224\nE       2   chromedriver                        0x0000000102905a5c cxxbridge1$string$len + 90124\nE       3   chromedriver                        0x000000010294cc78 cxxbridge1$string$len + 381480\nE       4   chromedriver                        0x000000010298dac0 cxxbridge1$string$len + 647280\nE       5   chromedriver                        0x0000000102940eb4 cxxbridge1$string$len + 332900\nE       6   chromedriver                        0x0000000102d930f0 cxxbridge1$str$ptr + 2581644\nE       7   chromedriver                        0x0000000102d963b4 cxxbridge1$str$ptr + 2594640\nE       8   chromedriver                        0x0000000102d7470c cxxbridge1$str$ptr + 2456232\nE       9   chromedriver                        0x0000000102d96c2c cxxbridge1$str$ptr + 2596808\nE       10  chromedriver                        0x0000000102d65f34 cxxbridge1$str$ptr + 2396880\nE       11  chromedriver                        0x0000000102db66a0 cxxbridge1$str$ptr + 2726460\nE       12  chromedriver                        0x0000000102db682c cxxbridge1$str$ptr + 2726856\nE       13  chromedriver                        0x0000000102dc67b8 cxxbridge1$str$ptr + 2792276\nE       14  libsystem_pthread.dylib             0x0000000187511c0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x000000018750cb80 thread_start + 8\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_and_teardown","time":{"start":1748762429772,"stop":1748762434887,"duration":5115},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login_as_admin","time":{"start":1748762434888,"stop":1748762435077,"duration":189},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"setup_and_teardown::0","time":{"start":1748762456370,"stop":1748762456454,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"suite","value":"test_admin"},{"name":"host","value":"Lao-Lao-Mac.local"},{"name":"thread","value":"2926-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_admin"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"confirm_password","value":"'admin124'"},{"name":"expected_message","value":"'Passwords do not match'"},{"name":"password","value":"'admin123'"},{"name":"username","value":"'lily3'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"84693aeea9d78821.json","parameterValues":["'admin124'","'Passwords do not match'","'admin123'","'lily3'"]}